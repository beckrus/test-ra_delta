services:
  db:
    image: mysql:8.0.42-debian
    container_name: post_db
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10   
  redis:
    image: redis:7.4.4-alpine
    container_name: 'post_redis'
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  backend:
    container_name: "post_backend"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
  taskiq-worker:
    container_name: "post_taskiq_worker"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    command: ["taskiq", "worker", "src.tasks.taskiq:broker"]
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
  taskiq-scheduler:
    container_name: "post_taskiq_scheduler"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    command: ["taskiq", "scheduler", "src.tasks.taskiq:scheduler"]
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy